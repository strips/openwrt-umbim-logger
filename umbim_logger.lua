#!/usr/bin/env lua

-- Code heavily generated by Google Gemini by authors instructions
-- Author, Stian Indal Haugseth
-- Change

-- Configuration
local command_arguments = {"caps", "home", "registration", "subscriber", "attach", "config", "radio"}
local umbim_command = "umbim -t 6 -n -d /dev/cdc-wdm0"
local log_file = "mbim_data_" .. os.date("%Y-%m-%d") .. ".log"
local separator = "|"

-- Function to extract key from a line
local function extract_key(line)
  for key in string.gmatch(line, "(%w+):") do
    return key
  end
  return nil
end

-- Function to extract value from a line
local function extract_value(line)
  local _, _, value = string.find(line, ":(.*)")
  return value and string.match(value, "%S.*") or nil
end

-- Function to get the previous value from the log file
local function get_previous_value(full_key)
  local cmd = "grep '|" .. full_key .. "|" .. "' " .. log_file .. " 2>/dev/null | tail -n 1"
  local handle = io.popen(cmd)
  local output = handle:read("*a")
  handle:close()
  if output then
    local _, _, _, _, previous_value = string.find(output, "(.*)" .. separator .. "(.*)" .. separator .. "(.*)" .. separator .. "(.*)" .. separator .. "(.*)")
    print("Previous value for " .. full_key .. ": " .. tostring(previous_value)) -- Debug output
    return previous_value
  end
  print("Previous value for " .. full_key .. ": nil") -- Debug output
  return nil
end

-- Function to print and log the value
local function print_and_log(full_key, value, status)
  local timestamp = os.date("!%Y-%m-%dT%H:%M:%S%z")
  local output = timestamp .. separator .. status .. separator .. full_key .. separator .. value
  print(output) -- Print to stdout
  local file = io.open(log_file, "a")
  file:write(output .. "\n")
  file:close()
end

-- Main loop
while true do
  -- Loop command_argument list for umbim command
  for _, argument in ipairs(command_arguments) do
    local cmd = umbim_command .. " " .. argument
    print("Running command: " .. cmd) -- Print the umbim command
    local handle = io.popen(cmd, 'r')  -- Run command
    local output = handle:read("*a")
    handle:close()

    -- Loop all key value pairs outputted from umbim command
    for line in string.gmatch(output, "[^\n]+") do
      local key = extract_key(line)
      if key then
        local new_value = extract_value(line)

        -- Add index to key (start with 1)
        local index = 1
        local full_key = argument .. "." .. key .. "." .. index

        -- Check if key with this index already exists
        while get_previous_value(full_key) do
          index = index + 1
          full_key = argument .. "." .. key .. "." .. index
        end

        local previous_value = get_previous_value(full_key)

        -- Compare new and old values and store if not exist or changed
        if not previous_value then
          -- First run, print and log all values
          print("not previous_value")
          print_and_log(full_key, new_value, "initial")
        elseif new_value ~= previous_value then
          -- Value changed, print and log the new value
          print("value diff: new '" .. new_value .. "' prev: '" .. previous_value .. "'")
          print_and_log(full_key, new_value, "changed")
        else
          print("value no diff: new '" .. new_value .. "' prev: '" .. previous_value .. "'") -- Debug output for no change
        end
      end
    end
  end

  
  print("sleep")
  os.execute("sleep 60") -- Wait for 60 seconds
end